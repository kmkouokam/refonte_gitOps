name: "refonte IAC"
on:
  push:
    branches:
      - main
      - staging
    paths:
      - "terraform/**"
  pull_request:
    branches:
      - main
    paths:
      - "terraform/**"
env:
    # This is the environment variable for the AWS credentials
    # that will be used in the workflow.
    AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
    #s3 bucket  for terraform state
    BUCKET_TF_STATE: ${{ secrets.BUCKET_TF_STATE }}
    AWS_REGION: us-east-1

jobs:
  terraform:
    name: "apply terraform code changes"

    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./terraform

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        #with:
        #  terraform_version: 1.6.3

      - name: Terraform Init
        id: init
        run: terraform init -backend-config="bucket=${{ secrets.BUCKET_TF_STATE }}" -backend-config="region=${{ secrets.AWS_REGION }}" -backend-config="encrypt=true"

      - name: Terraform format
        id: fmt
        run: terraform fmt -check

      - name: Terraform validate
        id: validate
        run: terraform validate

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color -input=false -out tfplan
        continue-on-error: true
        # This will allow the workflow to continue even if the plan fails.

      - name: Terraform Plan status

        id: plan_status
        run: |
          if [ "${{ steps.plan.outcome }}" == "failure" ]; then
            echo "Terraform plan failed. Please check the logs."
            exit 1
          fi

      # - name: Terraform Apply
      #   run: terraform apply -auto-approve --no-color --input=false --var-file=./terraform.tfvars --var-file=./terraform.auto.tfvars --var-file=./terraform.override.tfvars --var-file=./terraform.override.auto.tfvars --var-file=./terraform.override.auto.tfvars.json --var-file=./terraform.override.auto.tfvars.yaml --var-file=./terraform.override.auto.tfvars.yml --var-file=./terraform.override.auto.tfvars.jsonnet --var-file=./terraform.override.auto.tfvars.hcl --var-file=./terraform.override.auto.tfvars.toml --var-file=./terraform.override.auto.tfvars.tml
